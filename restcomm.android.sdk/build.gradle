apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'
//apply plugin: 'java'

// buildscript block only controls dependencies for the buildscript process itself, not for the application code
// We need this even though Project already has it, because we want the SDK module to work independently too
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.3'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.1'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1629
        versionName "1.0.0-BETA4"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
        }

        /*
        shrunk {
            minifyEnabled true
            shrinkResources true
        }
        */

    }
    sourceSets.main {
        jni.srcDirs = [] // This prevents the auto generation of Android.mk
        jniLibs.srcDir 'libs/jniLibs' // This is not necessary unless you have precompiled libraries in your project.
    }

    // TODO: currently getting some lint error from log4j library we 're using, that we need to fix and then remove this altogether:
    lintOptions {
        abortOnError false
    }
}

repositories {
    jcenter()
}

dependencies {
    compile project(':libwebrtc')
    //compile files('libs/libjingle_peerconnection_java.jar')
    compile 'com.android.support:appcompat-v7:25.1.1'
    // This is a dependency for JAIN SIP library (android-jain-sip-ri). Tried to replace it with maven 'org.apache.logging.log4j:log4j:2.6.2' but didn't work so until we update JAIN SIP library
    // accordingly we 're stuck with this local dependency
    //compile files('libs/log4j-1.2.15.jar')
    // Notice that log4j 2.7 doesn't work on account of JAIN SIP expecting log4j GroupId, not org.apache.logging.log4j. TODO: We should try to fix that at some point
    //compile 'org.apache.logging.log4j:log4j:2.7'
    // So we 're using 1.2.17 which uses the same Group Id, and also use 1.2.17 instead of 1.2.15 which has a dependency that causes us issues
    compile 'log4j:log4j:1.2.17'
    compile 'javax.sip:android-jain-sip-ri:1.2.293'
    // Provide JAIN SIP with proper Bouncy Castle encryption facilities (although Android seems to support BC, it appears that it has issues)
    compile 'com.madgag.spongycastle:core:1.54.0.0'
    compile 'com.madgag.spongycastle:prov:1.54.0.0'
    compile 'com.madgag.spongycastle:pkix:1.54.0.0'
}

// Upload to sonatype stuff
task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs // files(android.sourceSets.main.java.sourceFiles)
    title = "Restcomm Android SDK"
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar) + files("libs/libjingle_peerconnection_java.jar") //+ files("$buildDir/intermediates/bundles/debug/classes.jar")
    /* DEBUG
    classpath.getFiles().each { File file ->
        logger.error("---- file: " + file.absolutePath)
    }
    */

    destinationDir = file("../doc/")
    // Include only the higher API modules, so that its clean for the user
    include("**/RCClient.java", "**/RCConnection.java", "**/RCConnectionListener.java", "**/RCDevice.java", "**/RCDeviceListener.java")
    //exclude '**/org/restcomm/android/sdk/MediaClient/**'
    // Notice that including only higher API modules results in errors for seemingly undefined symbols. Until we find a way to deal with that
    // let's avoid failing on error
    failOnError true
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

signing {
    sign configurations.archives
}

def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}

def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }

            // Defined at gradle.properties for Olympus project -we might need to move those to be scoped for the library alone
            pom.groupId = "org.restcomm"
            pom.artifactId = "restcomm-android-sdk"
            //pom.version = "1.0.0-beta-4.1"
            pom.version = "1.0.0-beta-4.1-SNAPSHOT"

            // remember that releases first go to the staging area
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
                //logger.error("---- Username: " + getRepositoryUsername())
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
            }

            pom.project {
                name 'Restcomm Android SDK'
                packaging 'aar'
                // optionally artifactId can be defined here
                description 'Android Webrtc SDK to easily integrate communication/collaboration features into native Apps.'
                url 'https://github.com/RestComm/restcomm-android-sdk'

                scm {
                    connection 'scm:git:https://github.com/RestComm/restcomm-android-sdk'
                    developerConnection 'scm:git:https://github.com/RestComm/restcomm-android-sdk'
                    url 'https://github.com/RestComm/restcomm-android-sdk'
                }

                licenses {
                    license {
                        name 'GNU Affero General Public License, Version 3.0'
                        url 'https://www.gnu.org/licenses/agpl-3.0.en.html'
                    }
                }

                developers {
                    developer {
                        id 'atsakiridis'
                        name 'Antonis Tsakiridis'
                        email 'antonis.tsakiridis@telestax.com'
                        organization 'Telestax'
                        organizationUrl 'http://www.telestax.com'
                    }
                }

                contributors {
                    contributor {
                        name 'Arslan Mehboob'
                        //email 'john@doe.com'
                    }
                }

            }
        }
    }
}

/**/
